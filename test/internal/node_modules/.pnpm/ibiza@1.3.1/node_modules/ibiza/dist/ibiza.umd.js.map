{"version":3,"file":"ibiza.umd.js","sources":["../src/utils.js","../src/store.js","../src/proxify.js","../src/use_ibiza.js","../src/use_component_name.js","../src/helpers.js","../src/model.js"],"sourcesContent":["import memoize from 'micro-memoize'\n\nconst INFINITY = 1 / 0\nconst MAX_SAFE_INTEGER = 9007199254740991\n\nconst reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/\nconst reIsPlainProp = /^\\w*$/\nconst reLeadingDot = /^\\./\nconst reIsUint = /^(?:0|[1-9]\\d*)$/\nconst reEscapeChar = /\\\\(\\\\)?/g\nconst rePropName =\n  /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g\n\nexport function isDate(date) {\n  return Object.prototype.toString.call(date) === '[object Date]'\n}\n\nexport function isPlainObject(value) {\n  if (Object.prototype.toString.call(value) !== '[object Object]') return false\n\n  const prototype = Object.getPrototypeOf(value)\n  return prototype === null || prototype === Object.prototype\n}\n\n/**\n * Gets the value at `path` of `object`.\n *\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n */\nexport function get(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path)\n\n  let index = 0\n  const length = path.length\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])]\n  }\n\n  return index && index == length ? object : undefined\n}\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nexport function set(object, path, value) {\n  if (object == null) return object\n\n  if (!isObject(object)) return object\n\n  path = isKey(path, object) ? [path] : castPath(path)\n\n  let index = -1\n  let nested = object\n  const length = path.length\n  const lastIndex = length - 1\n\n  while (nested != null && ++index < length) {\n    const key = toKey(path[index])\n    let newValue = value\n\n    if (index != lastIndex) {\n      const objValue = nested[key]\n      newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {}\n    }\n\n    assignValue(nested, key, newValue)\n    nested = nested[key]\n  }\n  return object\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  const objValue = object[key]\n\n  if (\n    !(Object.prototype.hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n    (value === undefined && !(key in object))\n  ) {\n    object[key] = value\n  }\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other)\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length\n\n  return (\n    !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    value > -1 &&\n    value % 1 == 0 &&\n    value < length\n  )\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  const type = typeof value\n  return !!value && (type == 'object' || type == 'function')\n}\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) return value\n\n  const result = value + ''\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (Array.isArray(value)) return false\n\n  const type = typeof value\n  if (\n    type == 'number' ||\n    type == 'symbol' ||\n    type == 'boolean' ||\n    value == null ||\n    isSymbol(value)\n  ) {\n    return true\n  }\n\n  return (\n    reIsPlainProp.test(value) ||\n    !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object))\n  )\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return (\n    typeof value == 'symbol' ||\n    (!!value &&\n      typeof value == 'object' &&\n      Object.prototype.toString.call(value) == '[object Symbol]')\n  )\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return Array.isArray(value) ? value : stringToPath(value)\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nconst stringToPath = memoize(function (string) {\n  string = toString(string)\n\n  let result = []\n  if (reLeadingDot.test(string)) result.push('')\n\n  string.replace(rePropName, function (match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : number || match)\n  })\n\n  return result\n})\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  if (value == null) return ''\n\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') return value\n\n  if (isSymbol(value)) return Symbol.prototype.toString.call(value)\n\n  const result = value + ''\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result\n}\n","/* global process */\n\nimport { get, isPlainObject, isDate } from './utils.js'\n\nexport const isAccessor = Symbol('ibizaIsAccessor')\nexport const accessorOptions = Symbol('ibizaAccessorOptions')\nexport const isQuery = Symbol('ibizaIsQuery')\nexport const queryUrl = Symbol('ibizaQueryUrl')\nexport const queryFn = Symbol('ibizaQueryFunction')\n\nclass IbizaStore {\n  debug = process.env.NODE_ENV === 'development'\n\n  fetches = {}\n  modelInitializers = {}\n  modelOptions = {}\n\n  #setListeners = new Set()\n  #state = {}\n  #proxyCache = new WeakMap()\n  #mergedObjects = new WeakMap()\n  #customFetchFn\n\n  constructor() {\n    this.reset()\n  }\n\n  // CAUTION! Will wipe out the complete store state. Primarily used for testing.\n  set state(value) {\n    this.#proxyCache = new WeakMap()\n    this.#state = value\n  }\n\n  get state() {\n    return this.#proxyOf(this.#state)\n  }\n\n  // Returns the unproxied state.\n  get rawState() {\n    return this.#state\n  }\n\n  // Recursively merge the given `obj` into the store, ensuring that each level of the object is\n  // proxified.\n  merge(obj) {\n    if (!isPlainObject(obj)) {\n      throw new TypeError('IbizaStore#merge expects a plain object to merge')\n    }\n\n    // Don't merge if `obj` has already been merged.\n    if (!this.#mergedObjects.has(obj)) {\n      this.#mergedObjects.set(obj, true)\n      merge(this.state, obj)\n    }\n  }\n\n  listenForChanges(setFn) {\n    this.#setListeners.add(setFn)\n    return () => this.unlistenForChanges(setFn)\n  }\n\n  unlistenForChanges(setFn) {\n    this.#setListeners.delete(setFn)\n  }\n\n  publishChange() {\n    for (let listener of this.#setListeners) listener(...arguments)\n  }\n\n  reset() {\n    this.#state = {}\n    this.#mergedObjects = new WeakMap()\n    this.#proxyCache = new WeakMap()\n    this.#customFetchFn = undefined\n    this.#setListeners = new Set()\n\n    this.fetches = {}\n    this.modelInitializers = {}\n    this.modelOptions = {}\n    this.debug = process.env.NODE_ENV === 'development'\n  }\n\n  get fetchFn() {\n    return this.#customFetchFn || this.#defaultFetchFn\n  }\n\n  set fetchFn(fn) {\n    this.#customFetchFn = fn\n  }\n\n  #defaultFetchFn = (resource, opts) => {\n    class HTTPError extends Error {}\n    const url = new URL(resource, location.origin)\n\n    return fetch(new Request(url), opts).then(response => {\n      if (!response.ok) {\n        throw new HTTPError(response.statusText)\n      }\n\n      return response.status === 204 ? null : response.json()\n    })\n  }\n\n  fetch(resource, opts = {}) {\n    const { suspense, ...options } = opts\n\n    const thenCallback = response => {\n      this.fetches[resource].status = 'success'\n\n      if (response === null) return response\n\n      return (this.fetches[resource].response =\n        resource in this.modelInitializers ? this.modelInitializers[resource](response) : response)\n    }\n\n    const fetchFn = (this.modelOptions[resource]?.fetcher || this.fetchFn).bind(this.state)\n\n    // Regular fetch.\n    if (!suspense) {\n      return fetchFn(resource, options).then(thenCallback)\n    }\n\n    // Suspenseful fetch.\n    if (!this.fetches[resource]) {\n      this.fetches[resource] = {\n        status: 'start',\n        fetch: fetchFn(resource, options)\n          .then(thenCallback)\n          .catch(error => {\n            this.fetches[resource].status = 'error'\n            this.fetches[resource].error = error\n          })\n      }\n    } else {\n      if (this.fetches[resource].error) {\n        delete this.fetches[resource].fetch\n        throw this.fetches[resource].error\n      } else if (this.fetches[resource].response) {\n        delete this.fetches[resource].fetch\n        return this.fetches[resource].response\n      }\n    }\n\n    throw this.fetches[resource].fetch\n  }\n\n  #proxyOf(target, parentPath = null) {\n    if (target.isHookProxy) return target\n    if (this.#proxyCache.has(target)) return this.#proxyCache.get(target)\n\n    function buildPath(prop) {\n      if (!prop) return parentPath\n      if (prop.indexOf('/') === 0) return prop\n\n      return parentPath ? [parentPath, prop].join('.') : prop\n    }\n\n    // Returns the fetcher (from store.fetches) for the given `prop`.\n    const getFetcherByProp = prop => {\n      if (prop.indexOf('/') !== 0) {\n        const path = buildPath(prop)\n        if (path.indexOf('/') === 0) {\n          prop = path.split('.')[0]\n        }\n      }\n\n      if (Object.prototype.hasOwnProperty.call(this.fetches, prop)) {\n        return this.fetches[prop]\n      }\n    }\n\n    // eslint-disable-next-line unicorn/no-this-assignment\n    const $this = this\n\n    const proxy = new Proxy(target, {\n      get(target, prop, receiver) {\n        if (prop === 'isProxy') return true\n        if (prop === 'isStoreProxy') return true\n        if (prop === 'isHookProxy') return false\n        if (prop === '__path') return parentPath\n        if (prop === '__fetcher') return getFetcherByProp(parentPath)\n\n        if (prop === '__raw') {\n          return parentPath ? get($this.rawState, parentPath) : $this.rawState\n        }\n\n        // Return save function if we are in a URL model.\n        if (prop === 'save') {\n          const path = buildPath(prop)\n\n          if (path.indexOf('/') === 0) {\n            return async (url = {}, options = {}) => {\n              if (typeof url !== 'string') {\n                options = url\n                ;[url] = path.split('.')\n              }\n\n              const response = await $this.fetch(url, {\n                method: 'patch',\n                ...options\n              })\n              if (response !== null) {\n                $this.state[url] = response\n              }\n\n              return response\n            }\n          }\n        }\n\n        if (prop === 'refetch') {\n          const path = buildPath(prop)\n\n          if (path.indexOf('/') === 0) {\n            return async () => {\n              const [url] = path.split('.')\n              const response = await $this.fetch(url)\n\n              if (response !== null) {\n                $this.state[url] = response\n              }\n\n              return response\n            }\n          }\n        }\n\n        // Forward any functions and non-own properties while allowing undefined properties, except\n        // the `length` prop which needs to be tracked so we can respond to array changes.\n        if (\n          prop !== 'length' &&\n          !Object.prototype.hasOwnProperty.call(target, prop) &&\n          (Object.getPrototypeOf(target)[prop] || typeof prop === 'symbol')\n        ) {\n          return Reflect.get(target, prop, receiver)\n        }\n\n        const path = buildPath(prop)\n        let result = Reflect.get(target, prop, receiver)\n\n        if (\n          Object.isFrozen(target) ||\n          (result !== null && typeof result === 'object' && Object.isFrozen(result))\n        ) {\n          return result\n        }\n\n        const shouldFetch = key =>\n          !Object.prototype.hasOwnProperty.call($this.fetches, key) || $this.fetches[key].fetch\n\n        const throwOnFetchError = key => {\n          if (\n            Object.prototype.hasOwnProperty.call($this.fetches, key) &&\n            $this.fetches[key].error\n          ) {\n            throw $this.fetches[prop].error\n          }\n        }\n\n        if (result?.[isAccessor]) {\n          return result(target, prop, receiver)\n        }\n\n        if (result?.[isQuery]) {\n          const url = result[queryFn].call(receiver)\n          // console.log(1, { prop, url, shouldFetch: shouldFetch(url), result })\n\n          throwOnFetchError(url)\n          if (shouldFetch(url)) {\n            const fetchResult = $this.fetch(url, { suspense: true })\n\n            Object.defineProperty(fetchResult, isQuery, { value: true })\n            Object.defineProperty(fetchResult, queryFn, { value: result[queryFn] })\n\n            this.set(target, prop, fetchResult, receiver)\n            result = fetchResult\n          } else if (Object.prototype.hasOwnProperty.call($this.fetches, url)) {\n            result = $this.fetches[url].response\n          }\n        } else if (prop.indexOf('/') === 0) {\n          throwOnFetchError(prop)\n\n          if (shouldFetch(prop)) {\n            result = $this.fetch(prop, { suspense: true })\n            this.set(target, prop, result, receiver)\n          }\n        } else if (path.indexOf('/') === 0) {\n          const [url, ...rest] = path.split('.')\n          const urlPath = rest.join('.')\n\n          throwOnFetchError(url)\n\n          if (shouldFetch(url)) {\n            const urlResult = $this.fetch(url, { suspense: true })\n            $this.state[url] = urlResult\n            result = get(urlResult, urlPath)\n          }\n        }\n\n        // If result is an Object, not null and not a Date, it must be a nested object, so proxify\n        // and return.\n        if (result !== null && typeof result === 'object' && !isDate(result)) {\n          return $this.#proxyOf(result, path)\n        }\n\n        return result\n      },\n\n      set(target, prop, value, receiver) {\n        if (target.isProxy) {\n          console.warn('[ibiza] Attempting to set a property (%s) on proxied object', prop, target)\n        }\n\n        if (Object.isFrozen(target)) {\n          throw new TypeError(`Cannot mutate '${prop}'. Object is frozen!`)\n        }\n\n        let previousValue = Reflect.get(target, prop, receiver)\n        const result = Reflect.set(target, prop, value, receiver)\n        if (result) {\n          previousValue = rawStateOf(previousValue)\n\n          if (prop === 'length' || !Object.is(previousValue, value)) {\n            const path = buildPath(prop)\n\n            if (store.debug) {\n              console.groupCollapsed('[ibiza] Mutated %o', path)\n              console.info({ previousValue, value })\n              console.groupEnd()\n            }\n\n            $this.publishChange({ target, prop, path, previousValue, value })\n          }\n        }\n\n        return result\n      },\n\n      deleteProperty(target, prop) {\n        const previousValue = Reflect.get(target, prop)\n        const result = Reflect.deleteProperty(target, prop)\n\n        if (result) {\n          $this.publishChange({\n            target,\n            prop,\n            path: buildPath(prop),\n            previousValue: rawStateOf(previousValue)\n          })\n        }\n\n        return result\n      }\n    })\n\n    // Add the proxy to the cache.\n    this.#proxyCache.set(target, proxy)\n\n    return proxy\n  }\n}\n\n// Initialize the store and export as default and on `window`.\nconst store = new IbizaStore()\nexport default store\n\nif (process.env.NODE_ENV !== 'production') {\n  window.ibizaStore = store\n}\n\n// Accepts a state Proxy and returns the raw un-proxied state.\nexport function rawStateOf(state) {\n  if (!state || !state.isProxy) return state\n\n  return state.__path ? get(store.rawState, state.__path) : store.rawState\n}\n\n// Recursively merge `src` into `target`. Arrays are replaced, and getters/setters copied without\n// being called.\nfunction merge(target, src) {\n  const props = Object.keys(src)\n\n  for (const prop of props) {\n    const desc = Object.getOwnPropertyDescriptor(src, prop)\n    const isDataDesc = Object.prototype.hasOwnProperty.call(desc, 'value')\n\n    // If the prop doesn't exist on the target, define it.\n    if (!Object.prototype.hasOwnProperty.call(target, prop)) {\n      Object.defineProperty(target, prop, desc)\n\n      // If have prop, but type is not object => Overwrite by redefining property\n    } else if (isDataDesc && typeof desc.value !== 'object') {\n      Object.defineProperty(target, prop, desc)\n\n      // If prop is Array => Replace.\n    } else if (Array.isArray(desc.value)) {\n      Object.defineProperty(target, prop, desc)\n    }\n\n    // prop is a data descriptor\n    if (isDataDesc) {\n      const value = target[prop]\n\n      if (isPlainObject(desc.value)) {\n        target[prop] = merge(value, desc.value)\n      } else if (Array.isArray(desc.value)) {\n        target[prop] = desc.value.map((x, i, array) => {\n          return isPlainObject(x) ? merge(array[i], x) : x\n        })\n      }\n    }\n  }\n\n  return target\n}\n","import { get, isDate } from './utils.js'\nimport store, { rawStateOf } from './store.js'\n\nexport default proxify\n\n// Creates and returns a Proxy of the given objOrPath.\n//\n// - `objOrPath` (Object|String) - If an object, it will be proxified directly. If a string, then\n//   the object to proxify will be `get` from the store state at the path given in `objOrPath`.\n//\n// The `store` maintains a global copy of the state. It can be read from at any time and anywhere,\n// but cannot be written to.\nfunction proxify(objOrPath, parentPath, onGet, proxyCache, debugRef) {\n  let obj\n  if (typeof objOrPath === 'string') {\n    obj = get(store.state, objOrPath) || {}\n    parentPath = objOrPath\n  } else {\n    obj = objOrPath || store.state\n  }\n\n  if (proxyCache.has(obj)) return proxyCache.get(obj)\n  if (obj === null) return obj\n  if (obj.isHookProxy) return obj\n\n  const proxy = new Proxy(obj, {\n    get(target, prop) {\n      if (prop === 'isProxy') return true\n      if (prop === 'isStoreProxy') return false\n      if (prop === 'isHookProxy') return true\n\n      // Return store state.\n      if (prop === '$root') return proxify(null, null, onGet, proxyCache, debugRef)\n\n      // Return model (top level ancestor).\n      if (prop === '$model') {\n        const [model] = buildPath(prop).split('.')\n        return proxify(model, null, onGet, proxyCache, debugRef)\n      }\n\n      const hasOwnProperty = Object.prototype.hasOwnProperty.call(target, prop)\n      let result = Reflect.get(...arguments)\n\n      if (\n        Object.isFrozen(target) ||\n        (result !== null && typeof result === 'object' && Object.isFrozen(result))\n      ) {\n        return rawStateOf(result)\n      }\n\n      // Forward calls to URL model save().\n      if (prop === '__path' || (prop === 'save' && typeof result === 'function')) return result\n\n      // Forward any functions and non-own properties while allowing undefined properties, except\n      // the `length` prop which needs to be tracked so we can respond to array changes.\n      if (\n        prop !== 'length' &&\n        !hasOwnProperty &&\n        (Object.getPrototypeOf(target)[prop] || typeof prop === 'symbol')\n      ) {\n        return result\n      }\n\n      // Functions are bound to the local state. And the global state is passed as the first\n      // argument.\n      if (typeof result === 'function' && hasOwnProperty) {\n        return result.bind(\n          proxify(target, parentPath, onGet, proxyCache, debugRef),\n          proxify(null, null, onGet, proxyCache, debugRef)\n        )\n      }\n\n      const path = buildPath(prop)\n\n      // If result is an object, but not null, it must be a nested object, so proxify and return it.\n      if (result !== null && typeof result === 'object' && !isDate(result)) {\n        return proxify(result, path, onGet, proxyCache, debugRef)\n      }\n\n      onGet(path, 'get')\n\n      return result\n    },\n\n    ownKeys() {\n      onGet(buildPath(), 'ownKeys')\n      return Reflect.ownKeys(...arguments)\n    }\n  })\n\n  function buildPath(prop) {\n    if (!prop) return parentPath\n    if (prop.indexOf('/') === 0) return prop\n\n    return parentPath ? [parentPath, prop].join('.') : prop\n  }\n\n  proxyCache.set(obj, proxy)\n\n  return proxy\n}\n","import { useCallback, useReducer, useRef, useEffect, useMemo } from 'react'\nimport memoize from 'micro-memoize'\nimport { deepEqual } from 'fast-equals'\n\nimport { isPlainObject, isDate, get, set } from './utils.js'\nimport useComponentName from './use_component_name.js'\nimport proxify from './proxify.js'\nimport store from './store.js'\n\n// Accepts an initial slice as a keyed path string, and returns a proxy of the state. If a slice is\n// given (String), then the returned state will be sliced by the given slice path.\n//\n// - initialStateOrSlice (Object|Function|String) - If a string, then a slice of the store state is\n//    returned. Otherwise, the value given will be merged into the store state. If a function, then\n//    that function will be called with the state, and the return value merged into the store.\n// - initialState (?Object|Function) - The value given will be merged into the store state. If a\n//    function, then that function will be called with the state, and the return value merged into\n//    the store.\nfunction useIbiza(initialStateOrSlice, initialState) {\n  const cnameRef = useComponentName()\n  const [, forceRender] = useReducer(s => s + 1, 0)\n  const usedPathsRef = useRef([])\n  const proxyCacheRef = useRef(new WeakMap())\n  const initialStateOrSliceRef = useRef(initialStateOrSlice)\n  const slicePathRef = useRef()\n\n  // Force a rerender when a used state property has been changed.\n  const onSet = useCallback(({ path, previousValue, value }) => {\n    const used = hasUsedPath(path, usedPathsRef.current)\n\n    if (used) {\n      // If the path is a parent of a used path, do an additional equality check on the used\n      // children. This helps ensure that we only rerender when the used paths are actually\n      // changed.\n      if (used === 'parent') {\n        const childPath = hasChangedChildren(path, usedPathsRef.current, value, previousValue)\n        if (childPath) {\n          if (store.debug) {\n            console.debug(\n              '[ibiza] <%s> rerendering on child %o of %o',\n              cnameRef.current,\n              childPath,\n              path\n            )\n          }\n\n          forceRender()\n        }\n      } else {\n        store.debug &&\n          console.debug('[ibiza] <%s> rerendering on %o (%s)', cnameRef.current, path, used)\n\n        forceRender()\n      }\n    }\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const onGet = useCallback(\n    path => {\n      if (usedPathsRef.current.includes(path)) return\n\n      store.debug && console.debug('[ibiza] <%s> tracking %o', cnameRef.current, path)\n\n      usedPathsRef.current.push(path)\n      store.listenForChanges(onSet)\n    },\n    [cnameRef, onSet]\n  )\n\n  if (typeof initialStateOrSliceRef.current !== undefined) {\n    if (isPlainObject(initialStateOrSliceRef.current)) {\n      // Hook argument is a plain object, so merge it into the existing store as initial state.\n      store.merge(initialStateOrSliceRef.current)\n      initialStateOrSliceRef.current = undefined\n    } else if (typeof initialStateOrSliceRef.current === 'function') {\n      store.merge(initialStateOrSliceRef.current(store.state))\n      initialStateOrSliceRef.current = undefined\n    } else if (typeof initialStateOrSliceRef.current === 'string') {\n      // We have a request for a slice of the state. Slices can be a dot seperated path to the\n      // property you want (eg. 'my.slice.of.state'), or a relative URL (eg. '/users/1').\n      slicePathRef.current = initialStateOrSliceRef.current\n      initialStateOrSliceRef.current = undefined\n\n      if (initialState) {\n        let state\n        if (slicePathRef.current.indexOf('/') === 0) {\n          state = typeof initialState === 'function' ? {} : initialState\n        } else {\n          state =\n            typeof initialState === 'function'\n              ? initialState(get(store.state, slicePathRef.current) || {})\n              : initialState\n        }\n\n        store.merge(set({}, slicePathRef.current, state))\n      }\n    }\n  }\n\n  // Delete set listener on component unmount.\n  useEffect(() => {\n    return () => store.unlistenForChanges(onSet)\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const [pathForProxy, directPropForProxy] = useMemo(() => {\n    let path = null\n    let directProp = null\n\n    // If slicePath is defined, get and return its value from the store state.\n    if (slicePathRef.current) {\n      path = slicePathRef.current\n      const state = get(store.state, path)\n\n      // Any non-(null|object|function) slice state should proxify its parent, but return the value\n      // of the requested property. This allows us to fetch a non-object slice. Note that the\n      // returned value should not be mutated.\n      if (\n        state !== null &&\n        typeof state !== 'undefined' &&\n        typeof state !== 'object' &&\n        typeof state !== 'function'\n      ) {\n        const [prop, ...parentPaths] = path.split('.').reverse()\n        directProp = prop\n        path = parentPaths.reverse().join('.') || null\n      }\n    }\n\n    return [path, directProp]\n  }, [])\n\n  const proxy = proxify(pathForProxy || null, null, onGet, proxyCacheRef.current, cnameRef)\n  return directPropForProxy ? proxy[directPropForProxy] : proxy\n}\n\nexport default useIbiza\n\n// Returns false if `path` is not used. Otherwise, returns a string signifying the type of usage:\n// - \"exact\" - Path is an exact match for a used path.\n// - \"parent\" - Path is a parent (ancestor) of a used path.\n// - \"child\" - Path is a child of a used path.\nfunction hasUsedPath(path, usedPaths) {\n  // Return true if `path` is an exact used path.\n  if (usedPaths.includes(path)) return 'exact'\n\n  let result = false\n  for (const up of usedPaths) {\n    // Return true if path is a descendent of any used path. For example, if `user.errors.name` has\n    // changed, and `user.errors` or `user` is being tracked.\n    if (path.startsWith(up)) {\n      result = 'child'\n      break\n    }\n\n    // Return true if path has any used ascendents. For example, if 'user.errors.name' is being\n    // tracked, and 'user.errors` or 'user' is mutated, this will return true.\n    if (up.startsWith(`${path}.`)) {\n      result = 'parent'\n      break\n    }\n  }\n\n  return result\n}\n\nfunction hasChangedChildrenFn(path, usedPaths, value, previousValue) {\n  return usedPaths.find(up => {\n    if (!up.startsWith(`${path}.`)) return false\n\n    const childPath = up.slice(path.length + 1)\n    const isPath = childPath.includes('.')\n\n    let nValue = undefined\n    if (value != null) {\n      nValue = isPath ? get(value, childPath) : value[childPath]\n    }\n\n    let pValue = undefined\n    if (previousValue != null) {\n      pValue = isPath ? get(previousValue, childPath) : previousValue[childPath]\n    }\n\n    if (isDate(nValue) && isDate(pValue)) return nValue.getTime() !== pValue.getTime()\n\n    return typeof pValue === 'object' && typeof nValue === 'object'\n      ? !deepEqual(nValue, pValue)\n      : !Object.is(nValue, pValue)\n  })\n}\n\nconst hasChangedChildren = memoize(hasChangedChildrenFn, {\n  isEqual: deepEqual,\n  maxSize: Number.POSITIVE_INFINITY\n})\n","/* global process */\n\nimport { useRef } from 'react'\n\nexport default () => {\n  const ref = useRef()\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line unicorn/error-message\n    const name = new Error().stack.split('\\n').find(ln => {\n      return /^[A-Z]/.test(ln.trim().split(' ')[1])\n    })\n\n    ref.current = name?.trim().split(' ')[1]\n  }\n\n  return ref\n}\n","import { isQuery, queryUrl, queryFn, isAccessor, accessorOptions } from './store.js'\n\n// DEPRECATED - use accessor() instead\n//\n// Create a accessor descriptor on the given `obj` at `prop`. This defines a getter and setter\n// with a internally scoped value.\n//\n// - obj (Object)\n// - prop (String)\n// - options (Object?)\n// - options.initialValue (any?) - An initial value to assign to the property. If undefined, the\n//   initialValue will be taken from property of the same name in the `obj` argument (if any).\n// - options.onGet (function?) - A function to be called each time the property is \"get\". It will be\n//   called with property value.\n// - options.onSet (function?) - A function to be called each time the property is \"set\". It will be\n//   called with the old and new property values. A function is passed as the third argument, which\n//   can be used to manually set the value, allowing you to perform some validation logic.\nexport function createAccessor(obj, prop, options = {}) {\n  let _manuallySet = false\n  let _value = Object.prototype.hasOwnProperty.call(obj, prop) ? obj[prop] : options.initialValue\n\n  const setValue = value => {\n    _value = value\n    _manuallySet = true\n  }\n\n  Object.defineProperty(obj, prop, {\n    get() {\n      return options.onGet ? options.onGet.call(this, _value) : _value\n    },\n\n    set(newValue) {\n      options.onSet?.call(this, _value, newValue, setValue)\n\n      if (_manuallySet) {\n        _manuallySet = false\n      } else {\n        _value = newValue\n      }\n    }\n  })\n}\n\nexport function accessor(options = {}) {\n  function definition(target, prop, receiver) {\n    let _manuallySet = false\n    let _value = options.initialValue\n\n    const setValue = value => {\n      _value = value\n      _manuallySet = true\n    }\n\n    Object.defineProperty(target, prop, {\n      get() {\n        return options.onGet ? options.onGet.call(this, _value) : _value\n      },\n\n      set(newValue) {\n        options.onSet?.call(this, _value, newValue, setValue)\n\n        if (_manuallySet) {\n          _manuallySet = false\n        } else {\n          _value = newValue\n        }\n      }\n    })\n\n    return Reflect.get(target, prop, receiver)\n  }\n\n  Object.defineProperty(definition, isAccessor, { value: true })\n\n  return definition\n\n  const def = {}\n\n  function get() {\n    return options.onGet ? options.onGet.call(this, _value) : _value\n  }\n\n  Object.defineProperty(def, isAccessor, { value: true })\n  Object.defineProperty(def, accessorOptions, { value: options })\n\n  return def\n}\nexport function query(fn) {\n  const def = {}\n\n  Object.defineProperty(def, isQuery, { value: true })\n  Object.defineProperty(def, queryFn, { value: fn })\n\n  return def\n}\n\nexport function freeze(object) {\n  // When already frozen, we assume its children are frozen (for better performance).\n  // This should be true if you always use `simpleDeepFreeze` to freeze objects,\n  // which is why you should have a linter rule that prevents you from using\n  // `Object.freeze` standalone.\n  //\n  // Note that Object.isFrozen will also return `true` for primitives (numbers,\n  // strings, booleans, undefined, null), so there is no need to check for\n  // those explicitly.\n  if (Object.isFrozen(object)) return object\n\n  if (!Array.isArray(object) && Object.getPrototypeOf(object) !== Object.getPrototypeOf({})) {\n    throw new Error('Ibiza#freeze only supports plain objects, arrays, and primitives')\n  }\n\n  // At this point we know that we're dealing with either an array or plain object, so\n  // just freeze it and recurse on its values.\n  Object.freeze(object)\n  Object.keys(object).forEach(key => {\n    freeze(object[key])\n  })\n\n  return object\n}\n","import { useDebugValue } from 'react'\n\nimport useIbiza from './use_ibiza.js'\nimport store from './store.js'\n\n// Creates an Ibiza model, and returns a React hook wrapping useIbiza with the given `modelName` as\n// the slice. The given `modelDef` is assigned as the initial state to the `modelName` state key. If\n// `modelDef` is a function, it will be called with any passed initial state, and props that are\n// passed to the returned hook.\n//\n// Note that modelDef is assigned only once - the first time the returned hook is called. But if\n// the model is URL based, and modelDef is a function, then the modelDef will be called with the\n// server response each time the model is fetched from the server.\n//\n// - modelName (String) - The name of the model, and the key to which the model's state will be\n//   assigned.\n// - modelDef (?Function|Object) - The initial model definition.\n// - options (?Object) - Model options:\n//   - fetch (Function) - A custom fetch function that this model will use. Only applies to URL\n//     models.\n//\n// Examples:\n//  const useUser = createModel('user', { name: 'Joel' })\n//  const user = useUser({ age: 43 })\n//  const child = useUser('child', { name: 'My child' })\n//\nexport function createModel(modelName, modelDef = {}, options = {}) {\n  function useIbizaModel(slice, props) {\n    useDebugValue(modelName)\n\n    if (typeof slice !== 'string') {\n      props = slice\n      slice = undefined\n    }\n\n    if (modelName in store.state === false) {\n      if (typeof modelDef === 'function') {\n        const initialState = (store.modelInitializers[modelName] = state => modelDef(state, props))\n\n        if (modelName.indexOf('/') !== 0) {\n          store.state[modelName] = initialState(store.state[modelName])\n        }\n      } else {\n        store.state[modelName] = modelDef\n      }\n    }\n\n    store.modelOptions[modelName] = options\n\n    return useIbiza(slice ? [modelName, slice].join('.') : modelName)\n  }\n\n  return useIbizaModel\n}\n"],"names":["reIsDeepProp","reIsPlainProp","reLeadingDot","reIsUint","reEscapeChar","rePropName","isDate","date","Object","prototype","toString","call","isPlainObject","value","getPrototypeOf","get","object","path","index","length","isKey","castPath","toKey","undefined","assignValue","key","objValue","hasOwnProperty","other","eq","isIndex","test","isObject","type","isSymbol","result","Array","isArray","stringToPath","memoize","string","Symbol","push","replace","match","number","quote","isAccessor","isQuery","queryFn","IbizaStore","debug","process","env","NODE_ENV","fetches","modelInitializers","modelOptions","Set","WeakMap","resource","opts","HTTPError","Error","url","URL","location","origin","fetch","Request","then","response","ok","statusText","status","json","this","reset","merge","obj","TypeError","_classPrivateFieldLooseBase","has","set","state","listenForChanges","setFn","add","_this","unlistenForChanges","publishChange","listener","arguments","suspense","options","thenCallback","_this2","fetchFn","fetcher","bind","error","fn","target","parentPath","isHookProxy","buildPath","prop","indexOf","join","$this","proxy","Proxy","receiver","split","_this3","getFetcherByProp","rawState","method","Reflect","isFrozen","shouldFetch","throwOnFetchError","_result","_result2","fetchResult","defineProperty","urlPath","urlResult","isProxy","console","warn","previousValue","rawStateOf","is","store","groupCollapsed","info","groupEnd","deleteProperty","__path","src","keys","desc","getOwnPropertyDescriptor","isDataDesc","map","x","i","array","proxify","objOrPath","onGet","proxyCache","debugRef","model","ownKeys","useIbiza","initialStateOrSlice","initialState","cnameRef","ref","useRef","name","stack","find","ln","trim","current","useComponentName","forceRender","useReducer","s","usedPathsRef","proxyCacheRef","initialStateOrSliceRef","slicePathRef","onSet","useCallback","used","usedPaths","includes","up","startsWith","hasUsedPath","childPath","hasChangedChildren","nested","lastIndex","newValue","useEffect","useMemo","directProp","reverse","directPropForProxy","window","ibizaStore","slice","isPath","nValue","pValue","getTime","deepEqual","isEqual","maxSize","Number","POSITIVE_INFINITY","definition","_manuallySet","_value","initialValue","setValue","modelName","modelDef","props","useDebugValue","freeze","forEach","def"],"mappings":"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"}
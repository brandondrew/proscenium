export const snapshot = {};

snapshot[`bundle-all: prefix > js import 1`] = `
'// bundleAll:/Users/joelmoss/dev/proscenium/test/internal/lib/bundle_all_import/three.js
var three_default = () => console.log("three");

// bundleAll:/Users/joelmoss/dev/proscenium/test/internal/lib/bundle_all_import/two.js
var two_default = () => {
  console.log("two");
  three_default();
};

// url:https://esm.sh/v99/ip-regex@5.0.0/es2022/ip-regex.js
var g = "[a-fA-F\\\\\\\\d:]";
var d = (e) => e && e.includeBoundaries ? \`(?:(?<=\\\\\\\\s|^)(?=\${g})|(?<=\${g})(?=\\\\\\\\s|\$))\` : "";
var c = "(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]\\\\\\\\d|\\\\\\\\d)(?:\\\\\\\\.(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]\\\\\\\\d|\\\\\\\\d)){3}";
var \$ = "[a-fA-F\\\\\\\\d]{1,4}";
var x = \`
(?:
(?:\${\$}:){7}(?:\${\$}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8
(?:\${\$}:){6}(?:\${c}|:\${\$}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4
(?:\${\$}:){5}(?::\${c}|(?::\${\$}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4
(?:\${\$}:){4}(?:(?::\${\$}){0,1}:\${c}|(?::\${\$}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4
(?:\${\$}:){3}(?:(?::\${\$}){0,2}:\${c}|(?::\${\$}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4
(?:\${\$}:){2}(?:(?::\${\$}){0,3}:\${c}|(?::\${\$}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4
(?:\${\$}:){1}(?:(?::\${\$}){0,4}:\${c}|(?::\${\$}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4
(?::(?:(?::\${\$}){0,5}:\${c}|(?::\${\$}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4
)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1
\`.replace(/\\\\s*\\\\/\\\\/.*\$/gm, "").replace(/\\
/g, "").trim();
var n = new RegExp(\`(?:^\${c}\$)|(?:^\${x}\$)\`);
var t = new RegExp(\`^\${c}\$\`);
var v = new RegExp(\`^\${x}\$\`);
var a = (e) => e && e.exact ? n : new RegExp(\`(?:\${d(e)}\${c}\${d(e)})|(?:\${d(e)}\${x}\${d(e)})\`, "g");
a.v4 = (e) => e && e.exact ? t : new RegExp(\`\${d(e)}\${c}\${d(e)}\`, "g");
a.v6 = (e) => e && e.exact ? v : new RegExp(\`\${d(e)}\${x}\${d(e)}\`, "g");
var r = a;

// bundleAll:/Users/joelmoss/dev/proscenium/test/internal/lib/bundle_all_import/one.js
var one_default = () => {
  console.log("one");
  two_default();
  r();
};

// lib/bundle_all_import/index.js
import foo4 from "/lib/foo4.js";
one_default();
foo4();
//# sourceMappingURL=index.js.map
'
`;

snapshot[`bundle-all: prefix > css 1`] = `
"/* url:https://unpkg.com/open-props@1.5.3/blue.min.css */
:where(html) {
  --blue-0:#e7f5ff;
  --blue-1:#d0ebff;
  --blue-2:#a5d8ff;
  --blue-3:#74c0fc;
  --blue-4:#4dabf7;
  --blue-5:#339af0;
  --blue-6:#228be6;
  --blue-7:#1c7ed6;
  --blue-8:#1971c2;
  --blue-9:#1864ab;
  --blue-10:#145591;
  --blue-11:#114678;
  --blue-12:#0d375e;
}

/* url:https://unpkg.com/open-props@1.5.3/green.min.css */
:where(html) {
  --green-0:#ebfbee;
  --green-1:#d3f9d8;
  --green-2:#b2f2bb;
  --green-3:#8ce99a;
  --green-4:#69db7c;
  --green-5:#51cf66;
  --green-6:#40c057;
  --green-7:#37b24d;
  --green-8:#2f9e44;
  --green-9:#2b8a3e;
  --green-10:#237032;
  --green-11:#1b5727;
  --green-12:#133d1b;
}

/* url:https://unpkg.com/open-props@1.5.3/red.min.css */
:where(html) {
  --red-0:#fff5f5;
  --red-1:#ffe3e3;
  --red-2:#ffc9c9;
  --red-3:#ffa8a8;
  --red-4:#ff8787;
  --red-5:#ff6b6b;
  --red-6:#fa5252;
  --red-7:#f03e3e;
  --red-8:#e03131;
  --red-9:#c92a2a;
  --red-10:#b02525;
  --red-11:#962020;
  --red-12:#7d1a1a;
}

/* bundleAll:/Users/joelmoss/dev/proscenium/test/internal/lib/bundle_all_import/two.css */
body {
  color: green;
}

/* bundleAll:/Users/joelmoss/dev/proscenium/test/internal/lib/bundle_all_import/one.css */

/* lib/bundle_all_import/index.css */
body {
  color: red;
}
/*# sourceMappingURL=index.css.map */
"
`;

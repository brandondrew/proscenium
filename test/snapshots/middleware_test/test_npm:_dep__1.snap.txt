{
  resOptions: {
    resolveDir: "/Users/joelmoss/dev/proscenium/test/internal",
    kind: "import-statement",
    importer: "",
    pluginData: { prefix: "npm", isResolvingPath: true }
  },
  result: {
    errors: [],
    warnings: [],
    path: "/Users/joelmoss/dev/proscenium/test/internal/node_modules/.pnpm/is-ip@5.0.0/node_modules/is-ip/index...",
    external: false,
    sideEffects: true,
    namespace: "file",
    suffix: "",
    pluginData: undefined
  }
}
{
  resOptions: {
    resolveDir: "/Users/joelmoss/dev/proscenium/test/internal/node_modules/.pnpm/is-ip@5.0.0/node_modules/is-ip",
    kind: "import-statement",
    importer: "/Users/joelmoss/dev/proscenium/test/internal/node_modules/.pnpm/is-ip@5.0.0/node_modules/is-ip/index...",
    pluginData: { isResolvingPath: true }
  },
  result: {
    errors: [],
    warnings: [],
    path: "/Users/joelmoss/dev/proscenium/test/internal/node_modules/.pnpm/ip-regex@5.0.0/node_modules/ip-regex...",
    external: false,
    sideEffects: true,
    namespace: "file",
    suffix: "",
    pluginData: undefined
  }
}
{
  resOptions: {
    resolveDir: "/Users/joelmoss/dev/proscenium/test/internal/node_modules/.pnpm/is-ip@5.0.0/node_modules/is-ip",
    kind: "import-statement",
    importer: "/Users/joelmoss/dev/proscenium/test/internal/node_modules/.pnpm/is-ip@5.0.0/node_modules/is-ip/index...",
    pluginData: { isResolvingPath: true }
  },
  result: {
    errors: [],
    warnings: [],
    path: "/Users/joelmoss/dev/proscenium/test/internal/node_modules/.pnpm/super-regex@0.2.0/node_modules/super...",
    external: false,
    sideEffects: true,
    namespace: "file",
    suffix: "",
    pluginData: undefined
  }
}
// node_modules/.pnpm/is-ip@5.0.0/node_modules/is-ip/index.js
import ipRegex from "/node_modules/.pnpm/ip-regex@5.0.0/node_modules/ip-regex/index.js";
import { isMatch } from "/node_modules/.pnpm/super-regex@0.2.0/node_modules/super-regex/index.js";
var maxIPv4Length = 15;
var maxIPv6Length = 45;
var options = {
  timeout: 400
};
function isIP(string) {
  return isMatch(ipRegex({ exact: true }), string.slice(0, maxIPv6Length), options);
}
function isIPv6(string) {
  return isMatch(ipRegex.v6({ exact: true }), string.slice(0, maxIPv6Length), options);
}
function isIPv4(string) {
  return isMatch(ipRegex.v4({ exact: true }), string.slice(0, maxIPv4Length), options);
}
function ipVersion(string) {
  return isIP(string) ? isIPv6(string) ? 6 : 4 : void 0;
}
export {
  ipVersion,
  isIP,
  isIPv4,
  isIPv6
};
//# sourceMappingURL=npm_is-ip.js.map

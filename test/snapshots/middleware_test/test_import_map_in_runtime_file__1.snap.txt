// env:env
var RAILS_ENV = "test";

// ../../lib/proscenium/runtime/component_manager/render_component.jsx
import { jsx } from "https://esm.sh/react@18.2.0/jsx-runtime";
async function render_component_default(ele, data) {
  const { createElement, useEffect, lazy, Suspense } = await import("https://esm.sh/react@18.2.0");
  const { createRoot } = await import("https://esm.sh/react-dom@18.2.0/client");
  const component = lazy(() => import(`/app/components${data.path}.jsx`));
  const contentLoader = data.contentLoader && ele.firstElementChild;
  const Fallback = ({ contentLoader: contentLoader2 }) => {
    useEffect(() => {
      contentLoader2 && contentLoader2.remove();
    }, []);
    if (!contentLoader2)
      return null;
    return /* @__PURE__ */ jsx("div", {
      style: { height: "100%" },
      dangerouslySetInnerHTML: { __html: contentLoader2.outerHTML }
    });
  };
  createRoot(ele).render(
    /* @__PURE__ */ jsx(Suspense, {
      fallback: /* @__PURE__ */ jsx(Fallback, {
        contentLoader
      }),
      children: createElement(component, data.props)
    })
  );
  RAILS_ENV === "development" && console.debug(`[REACT]`, `Rendered ${data.path.slice(1)}`);
}
export {
  render_component_default as default
};
